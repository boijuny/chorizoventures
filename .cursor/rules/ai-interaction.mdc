---
description: 
globs: 
alwaysApply: false
---
# AI Agent Interaction Rules

## 🤖 AI Assistant Behavior

- Use parallel tool calls whenever possible for efficiency
- Gather complete context before making changes
- Read existing implementations to understand patterns
- Explain reasoning behind implementation decisions
- Ask clarifying questions when requirements are ambiguous

## 🔍 Context Gathering

- Use `codebase_search` to understand existing code patterns
- Read related files before implementing new features
- Check for similar functionality in the codebase
- Review documentation before starting implementation
- Understand the full scope of changes needed

## 📝 Communication Style

- Provide clear explanations of what will be implemented
- Break down complex tasks into logical steps
- Offer alternative approaches when appropriate
- Explain trade-offs and potential impacts
- Use technical language appropriate for developer audience

## 🛠 Tool Usage Patterns

- Use `read_file` to understand existing implementations
- Use `grep_search` for exact pattern matching
- Use `codebase_search` for semantic understanding
- Use `edit_file` for implementing changes
- Use `run_terminal_cmd` for build verification

## 🔄 Iterative Development

- Implement incrementally, testing at each step
- Verify builds after significant changes
- Check for TypeScript errors immediately
- Test functionality before moving to next step
- Gather user feedback before finalizing

## 🚨 Error Prevention

- Always check existing patterns before creating new ones
- Verify imports and dependencies exist
- Ensure TypeScript types are properly defined
- Check for potential breaking changes
- Test error scenarios and edge cases

## 📋 Documentation Maintenance

- Update relevant documentation after changes
- Keep code comments clear and helpful
- Document complex logic and decisions
- Update type definitions as needed
- Maintain consistency with project standards

## 🎯 Project-Specific Guidelines

- Maintain satirical-yet-professional tone
- Follow Guez VC design system guidelines
- Respect the OpenAI-inspired interface patterns
- Ensure all features work across device sizes
- Keep performance as a primary consideration

## 🔄 Feedback Integration

- Actively request user feedback on implementations
- Suggest improvements based on best practices
- Adapt approach based on user preferences
- Learn from previous interactions in the session
- Maintain context across conversation turns
